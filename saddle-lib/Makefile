#
#   Stand-alone program, maybe called from Mathematica
#
MINRESDIR = ../../linear-algebra/minres-qlp
TRLANDIR = ../../linear-algebra/nutrlan
MKLROOT = /usr/local/intel/mkl
#
#
#              Intel MKL
#
ifeq (1, 1)  # Use MKL or not.
#
#  Flags generated by tool:
#  cd /usr/local/intel/mkl/tools; ./mkl_link_tool -interactive
#
#  compiler flags:
MKL_CFLAGS = -DUSE_MKL -m64 -I$(MKLROOT)/include
#
#  Linker flags:
#  Looks like dynamic linking doesn't work well if the routine
#  is called by Mathematica.
#  Use static links:
NUMERICS =  $(MKLROOT)/lib/intel64/libmkl_blas95_lp64.a $(MKLROOT)/lib/intel64/libmkl_lapack95_lp64.a -Wl,--start-group $(MKLROOT)/lib/intel64/libmkl_intel_lp64.a $(MKLROOT)/lib/intel64/libmkl_gnu_thread.a $(MKLROOT)/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl
#  Dynamic:
#NUMERICS = -L$(MKLROOT)/lib/intel64 -lmkl_blas95_lp64 -lmkl_lapack95_lp64 -Wl,--no-as-needed -lmkl_rt -lpthread -ldl
#NUMERICS = -L$(MKLROOT)/lib/intel64  -lmkl_blas95_lp64 -lmkl_lapack95_lp64 -Wl,--no-as-needed -lmkl_intel_lp64 -lmkl_gnu_thread -lmkl_core -lgomp -lpthread -ldl
else
NUMERICS = -llapack -lblas
endif
#
#
#            RSB
#
#RSB_CFLAGS = -DUSE_LIBRSB
#RSB_LFLAGS =  -lrsb
#
#
#              -Wall -g -O3
CFLAGS = -fPIC -O3 -Wextra $(MKL_CFLAGS) $(RSB_CFLAGS) -pedantic -std=gnu11 -I$(TRLANDIR)/INC

MINRESOBJS = $(MINRESDIR)/minresqlpModule.o $(MINRESDIR)/minresqlpDataModule.o  $(MINRESDIR)/minresqlpBlasModule.o
SHIFTOBJS = shifts.o dynamic.o eigensystem.o cutoff.o linear.o mmio.o

shifts: $(SHIFTOBJS)
	$(CC) $(CFLAGS) -o shifts $(SHIFTOBJS) $(MINRESOBJS) -L$(TRLANDIR) -L/usr/local/lib  -lnutrlan $(NUMERICS) -lgfortran $(RSB_LFLAGS) -lm -lcjson

%.o: %.c shifts.h mmio.h
	$(CC) -c -o $@ $< $(CFLAGS)

clean:
	rm shifts *.o
