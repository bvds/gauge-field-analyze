#
#   Stand-alone program, maybe called from Mathematica
#
MINRESDIR = ../../linear-algebra/minres-qlp
TRLANDIR = ../../linear-algebra/nutrlan
MKLROOT = /usr/local/intel/mkl
#
#
#              Intel MKL
#
# Flags generated by tool:
# cd /usr/local/intel/mkl/tools; ./mkl_link_tool -interactive
#
# compiler flags:
MKL_CFLAGS = -DUSE_MKL -m64 -I$(MKLROOT)/include
#
# Linker flags:
MKL_LFLAGS = -L$(MKLROOT)/lib/intel64 -Wl,--no-as-needed -lmkl_rt -lpthread -ldl
#MKL_LFLAGS = -L$(MKLROOT)/lib/intel64 -Wl,--no-as-needed -lmkl_intel_lp64 -lmkl_gnu_thread -lmkl_core -lgomp -lpthread -ldl
#
#
#            RSB
#
#RSB_CFLAGS = -DUSE_LIBRSB
#RSB_LFLAGS =  -lrsb
#
#
#              -Wall -g -O3
CFLAGS = -fPIC -Wall -g -Wextra $(MKL_CFLAGS) $(RSB_CFLAGS) -pedantic -std=gnu11 -I$(TRLANDIR)/INC

MINRESOBJS = $(MINRESDIR)/minresqlpModule.o $(MINRESDIR)/minresqlpDataModule.o  $(MINRESDIR)/minresqlpBlasModule.o
SHIFTOBJS = shifts.o dynamic.o eigensystem.o cutoff.o linear.o mmio.o

shifts: $(SHIFTOBJS)
	$(CC) $(CFLAGS) -o shifts $(SHIFTOBJS) $(MINRESOBJS) -L$(TRLANDIR) -L/usr/local/lib $(MKL_LFLAGS) -lnutrlan -lgfortran -llapack -lblas $(RSB_LFLAGS) -lm -lcjson

%.o: %.c shifts.h mmio.h
	$(CC) -c -o $@ $< $(CFLAGS)

clean:
	rm shifts *.o
